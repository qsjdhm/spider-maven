<?xml version="1.0" encoding="UTF-8"?>
<!-- status="OFF"，可以去掉，它的含义为是否记录log4j2本身的event信息，默认是OFF -->
<configuration status="OFF">
    <!-- 定义下面的引用名 -->
    <Properties>
        <!--<property name="log_pattern">%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %M %L - %msg%xEx%n</property>-->
        <property name="log_pattern">%d{yyyy-MM-dd HH:mm:ss} - %msg%xEx [ %class{36} %M ] [ %L ] %n</property>

        <property name="info_file_name">logs/info/info.log</property>
        <property name="info_rolling_file_name">logs/info/info-%d{yyyy-MM-dd}-%i.log</property>

        <property name="error_file_name">logs/error/error.log</property>
        <property name="error_rolling_file_name">logs/error/error-%d{yyyy-MM-dd}-%i.log</property>

        <property name="every_file_size">10MB</property><!-- 日志切割的最小单位 -->
        <property name="output_log_level">debug</property><!-- 日志输出级别 -->
    </Properties>

    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="${log_pattern}"/>
        </Console>


        <!--
        重要的是，如果有多个ThresholdFilter，那么Filters是必须的，同时在Filters中，首先要过滤不符合的日志级别，把不需要的首先DENY掉，然后再ACCEPT需要的日志级别，这个次序不能搞颠倒。

         -->

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!-- 按月生成归档日志，可以使用 filePattern="logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz" -->
        <!-- 显示error级别之外的信息 -->
        <RollingFile name="InfoMsg" fileName="${info_file_name}"
                     filePattern="${info_rolling_file_name}">
            <PatternLayout pattern="${log_pattern}"/>
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>

        <!--如果需要配置多个Rollingfile地址，还需要在root下添加appender-ref ref="RollingFile1"/>
            只显示error级别的信息
         -->
        <RollingFile name="ErrorMsg" fileName="${error_file_name}"
                     filePattern="${error_rolling_file_name}">
            <PatternLayout pattern="${log_pattern}"/>
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>

    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger，需要在root的level中指定输出的级别，-->
        <root level="${output_log_level}">
            <appender-ref ref="InfoMsg"/>
            <appender-ref ref="ErrorMsg"/>
            <appender-ref ref="Console"/>
        </root>
    </loggers>
</configuration>